インデックス: app/src/main/java/com/timeshappy/scoresheet/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.timeshappy.scoresheet;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n\r\nclass DatabaseHelper  extends SQLiteOpenHelper {\r\n\r\n\r\n    public static final String SCORE = \"SCORE\";\r\n    public static final String COLUMN_ID = \"id\";\r\n    public static final String COLUMN_COUNT_TIMER = \"count_timer\";\r\n    public static final String COLUMN_PLAYER_NO = \"player_No\";\r\n    public static final String COLUMN_FOUL_NAME = \"foul_name\";\r\n\r\n    public DatabaseHelper(Context context) {\r\n        super(context, \"score_sheet.db\", null, 1);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n\r\n        String create_data = \"CREATE TABLE \" + SCORE + \" (\" + COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" + COLUMN_COUNT_TIMER + \" TEXT,\" + COLUMN_PLAYER_NO + \" INTEGER,\" + COLUMN_FOUL_NAME + \" TEXT)\";\r\n\r\n\r\n                db.execSQL(create_data);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n\r\n    }\r\n\r\n    public boolean addOne(Item item) {\r\n\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues cv = new ContentValues();\r\n\r\n        cv.put(COLUMN_COUNT_TIMER, item.getCount_timer());\r\n        cv.put(COLUMN_PLAYER_NO, item.getNumber());\r\n        cv.put(COLUMN_FOUL_NAME, item.getFoul_name());\r\n\r\n        long insert = db.insert(SCORE, null, cv);\r\n\r\n        return insert != -1;\r\n    }\r\n\r\n    public boolean deleteOne(Item item) {\r\n\r\n\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        String queryString = \"DELETE FROM \" + SCORE + \" WHERE \" + COLUMN_ID + \" = \" + item.getId();\r\n\r\n        Cursor cursor = db.rawQuery(queryString, null);\r\n\r\n        if (cursor.moveToFirst()) {\r\n            return true;\r\n        }\r\n        else {\r\n\r\n            return false;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public List<String> getEveryone() {\r\n\r\n        List<String> returnList = new ArrayList<>();\r\n\r\n        String queryString = \"SELECT * FROM \" + SCORE;\r\n\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n\r\n        Cursor cursor = db.rawQuery(queryString, null);\r\n\r\n        if (cursor.moveToFirst()) {\r\n            do {\r\n                String count_timer = cursor.getString(1);\r\n                String player_No = cursor.getString(2);\r\n                String foul_name = cursor.getString(3);\r\n\r\n                if (null == player_No  ){\r\n                    String newItem = count_timer + \" \" + foul_name;\r\n                    returnList.add(newItem);\r\n                }else {\r\n\r\n                    String newItem = count_timer + \" \" + player_No + \"番\" +\" \"+ foul_name;\r\n                    returnList.add(newItem);\r\n                }\r\n\r\n\r\n            } while (cursor.moveToNext());\r\n        } else {\r\n\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return returnList;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/timeshappy/scoresheet/DatabaseHelper.java	(リビジョン 1116a0f0a6650f992ba5504c49316d90bcb77179)
+++ app/src/main/java/com/timeshappy/scoresheet/DatabaseHelper.java	(date 1603798943226)
@@ -75,14 +75,11 @@
 
 
 
-    public List<String> getEveryone() {
+    public List<Item> getEveryone() {
 
-        List<String> returnList = new ArrayList<>();
-
+        List<Item> returnList = new ArrayList<>();
         String queryString = "SELECT * FROM " + SCORE;
-
         SQLiteDatabase db = this.getReadableDatabase();
-
         Cursor cursor = db.rawQuery(queryString, null);
 
         if (cursor.moveToFirst()) {
@@ -91,15 +88,17 @@
                 String player_No = cursor.getString(2);
                 String foul_name = cursor.getString(3);
 
-                if (null == player_No  ){
+                /*if (null == player_No  ){
                     String newItem = count_timer + " " + foul_name;
                     returnList.add(newItem);
                 }else {
 
                     String newItem = count_timer + " " + player_No + "番" +" "+ foul_name;
-                    returnList.add(newItem);
-                }
-
+
+
+
+                }*/
+            returnList.add(newItem);
 
             } while (cursor.moveToNext());
         } else {
インデックス: app/src/main/java/com/timeshappy/scoresheet/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.timeshappy.scoresheet;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.Locale;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    Button btn_restart,btn_stop,btn_goal,btn_reset;\r\n    TextView et_title_view;\r\n    String et_teama,et_teamb,title_view,taa,tbb;\r\n    ListView lv_item;\r\n\r\n\r\n    private Timer timer;\r\n    private CountUpTimerTask timerTask;\r\n    private Handler handler = new Handler();\r\n    private TextView timerText;\r\n    private long count, delay, period, stopCount;\r\n    private String zero;\r\n    public CharSequence stopTime;\r\n\r\n    ArrayAdapter<String> itemArrayAdapter;\r\n    DatabaseHelper databaseHelper ;\r\n\r\n    Item item = new Item(-1,null,0,null,0,0,0,null,null,0,0,null);\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n\r\n\r\n        delay = 0;\r\n        period = 100;\r\n        count = 4000;\r\n        // \"00:00.0\"\r\n        zero = getString(R.string.zero);\r\n\r\n        timerText = findViewById(R.id.countView);\r\n        timerText.setText(zero);\r\n\r\n        //各ボタンセット---------------------------------------------------------------\r\n        btn_restart = findViewById(R.id.btn_restart);\r\n        btn_goal = findViewById(R.id.btn_goal);\r\n        btn_reset = findViewById(R.id.btn_reset);\r\n        btn_stop = findViewById(R.id.btn_stop);\r\n        lv_item = findViewById(R.id.lv_itemList);\r\n\r\n        databaseHelper = new DatabaseHelper(MainActivity.this);\r\n\r\n        ShowItemOnListView(databaseHelper);\r\n\r\n        //前のページからのチーム名の引継ぎ-----------------------------------------------------\r\n        Intent intent = getIntent();\r\n\r\n        taa = intent.getStringExtra(\"ta\");\r\n        item.setTeama_name(taa);\r\n        et_teama = item.getTeama_name();\r\n\r\n        tbb = intent.getStringExtra(\"tb\");\r\n        item.setTeamb_name(tbb);\r\n        et_teamb = item.getTeamb_name();\r\n\r\n        title_view = (et_teama + \"   対   \" + et_teamb);\r\n        et_title_view = findViewById(R.id.title_view);\r\n        et_title_view.setText(title_view);\r\n\r\n\r\n\r\n        // タイマー開始--- タイマーが走っている最中にボタンをタップされたケース\r\n        if (null != timer) {\r\n            timer.cancel();\r\n            timer = null;\r\n        }\r\n\r\n        // Timer インスタンスを生成\r\n        timer = new Timer();\r\n\r\n\r\n        // TimerTask インスタンスを生成\r\n        timerTask = new CountUpTimerTask();\r\n\r\n        // スケジュールを設定 100msec // public void schedule (TimerTask task, long delay, long period)\r\n\r\n        timer.schedule(timerTask, delay, period);\r\n\r\n\r\n        /*Stop---------------------------------------------------------------------------------\r\n        *\r\n        *\r\n        * 停止作業\r\n        *\r\n        * -------------------------------------------------------------------------------------\r\n        * */\r\n\r\n        btn_stop.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // timer がnullでない、起動しているときのみキャンセルする\r\n                if (null != timer) {\r\n                    // Cancel\r\n                    stopCount = count;\r\n                    stopTime = timerText.getText();\r\n                    timer.cancel();\r\n                    item.setCount_timer((String) stopTime);\r\n\r\n                    Intent intent = new Intent(getApplication(), StopMenu.class);\r\n                    startActivityForResult(intent, 1000);\r\n\r\n                    ShowItemOnListView(databaseHelper);//一覧表示用\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n\r\n\r\n        //リスタートボタン-----------------------------------------------------------------------\r\n        btn_restart.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                // タイマーが走っている最中にボタンをタップされたケース\r\n                if (null != timer) {\r\n                    timer.cancel();\r\n                    timer = null;\r\n\r\n                    // Timer インスタンスを生成\r\n                    timer = new Timer();\r\n\r\n                    // TimerTask インスタンスを生成\r\n                    timerTask = new CountUpTimerTask();\r\n\r\n                    // スケジュールを設定 100msec\r\n                    //public void schedule (TimerTask task, long delay, long period)\r\n                    timer.schedule(timerTask, delay, period);\r\n\r\n                    // カウンター\r\n                    count = stopCount;\r\n                    timerText.setText(stopTime);\r\n                    //Toast.makeText(MainActivity.this,\"timer\"+stopTime,Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                    ShowItemOnListView(databaseHelper);//一覧表示用\r\n\r\n                    Button btn = findViewById(R.id.btn_restart);\r\n                    btn.setText(\"再　開\");\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //ゴールボタン---------------------------------------------------------\r\n        btn_goal.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                Toast.makeText(MainActivity.this, \"on goal\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n\r\n        //リセットボタン----------------------------------------------------------------\r\n        btn_reset.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                timerText = findViewById(R.id.countView);\r\n                timerText.setText(zero);\r\n                count = 40000;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        //アイテムを押して削除-----------------------------------------------------------------------\r\n\r\n        lv_item.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n\r\n             @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                 delete_data((Item) parent.getItemAtPosition(position));\r\n\r\n                 boolean success = databaseHelper.deleteOne((Item) parent.getItemAtPosition(position));\r\n                Toast.makeText(MainActivity.this,\"DELETE\"+ success,Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n//リストを再読み込みして最新のものを表示させるメソッド\r\n   private void ShowItemOnListView(DatabaseHelper databaseHelper) {\r\n        itemArrayAdapter = new ArrayAdapter<>(MainActivity.this, android.R.layout.simple_list_item_1, databaseHelper.getEveryone());\r\n        lv_item.setAdapter(itemArrayAdapter);\r\n    }\r\n\r\n\r\n//カウンター用処理------------------------------------------------------------------------\r\n\r\nclass CountUpTimerTask extends TimerTask {\r\n\r\n    @Override\r\n    public void run() {\r\n        // handlerを使って処理をキューイングする\r\n        handler.post(new Runnable() {\r\n            public void run() {\r\n                if (count <= 0) {\r\n                    return;\r\n                }\r\n                //count++;\r\n                count--;\r\n                long mm = count * 100 / 1000 / 60;\r\n                long ss = count * 100 / 1000 % 60;\r\n                long ms = (count * 100 - ss * 1000 - mm * 1000 * 60) / 100;\r\n                // 桁数を合わせるために02d(2桁)を設定\r\n                timerText.setText(\r\n                        String.format(Locale.US, \"%1$02d:%2$02d.%3$01d\", mm, ss, ms));\r\n            }\r\n        });\r\n    }}\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1000) {\r\n            if (RESULT_OK == resultCode) {\r\n                String mFoul_name = data.getStringExtra(\"mFoul_name\");\r\n                item.setFoul_name(mFoul_name);\r\n                save_data();\r\n\r\n                ShowItemOnListView(databaseHelper);//一覧表示用\r\n            }\r\n        }\r\n    }\r\n\r\n//save\r\n    public void save_data() {\r\n\r\n        /////////save(戻ってきた）\r\n        DatabaseHelper databaseHelper = new DatabaseHelper(MainActivity.this);\r\n        item.setNumber(Item.numberT);\r\n        boolean success = databaseHelper.addOne(item);//保存作業\r\n\r\n        Toast.makeText(MainActivity.this,\"保存\"+success,Toast.LENGTH_SHORT).show();\r\n\r\n\r\n    }\r\n    public void delete_data(Item _item){\r\n        DatabaseHelper databaseHelper = new DatabaseHelper(MainActivity.this);\r\n        boolean success = databaseHelper.deleteOne(_item);\r\n        Toast.makeText(MainActivity.this,\"削除\"+success,Toast.LENGTH_SHORT).show();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/timeshappy/scoresheet/MainActivity.java	(リビジョン 1116a0f0a6650f992ba5504c49316d90bcb77179)
+++ app/src/main/java/com/timeshappy/scoresheet/MainActivity.java	(date 1603798943203)
@@ -33,7 +33,7 @@
     private String zero;
     public CharSequence stopTime;
 
-    ArrayAdapter<String> itemArrayAdapter;
+    ArrayAdapter<Item> itemArrayAdapter;
     DatabaseHelper databaseHelper ;
 
     Item item = new Item(-1,null,0,null,0,0,0,null,null,0,0,null);
